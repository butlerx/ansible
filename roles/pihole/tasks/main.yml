---
- name: Install NTP
  apt:
    package: ntp
    state: present
  tags: ntp

- name: Make sure NTP is started up
  service:
    name: ntp
    state: started
    enabled: true
  tags: ntp

- name: Download Pi-Hole installer
  get_url:
    url: https://install.pi-hole.net
    dest: ~/install-pihole.sh
    mode: 0740
  tags: pihole

- name: Create pihole group
  group:
    name: '{{ pihole_group }}'
    state: present

- name: Create pihole user
  user:
    name: '{{ pihole_user }}'
    group: '{{ pihole_group }}'
    groups: '{{ pihole_group }},www-data'
    comment: 'ad filtering DNS proxy'
    system: true
    shell: '/usr/sbin/nologin'

- name: Create pihole configuration directory
  file:
    name: '{{ pihole_config_dir }}'
    state: directory
    owner: '{{ pihole_user }}'
    group: '{{ pihole_group }}'
    mode: 0775
  tags: pihole

- name: Create pihole configuration
  template:
    src: 'setupVars.conf.j2'
    dest: '{{ pihole_config_dir }}/setupVars.conf'
    owner: '{{ pihole_user }}'
    group: '{{ pihole_group }}'
    mode: 0644
  tags: pihole

- name: Set static IP configuration
  template:
    src: 'etc_network_interfaces.j2'
    dest: '/etc/network/interfaces'
    owner: root
    group: root
    mode: 0644
  tags: admin

- name: Set default DNS
  template:
    src: 'resolv.conf.j2'
    dest: '/etc/resolv.conf'
    owner: root
    group: root
    mode: 0644
  tags: admin

- name: Install Pi-Hole
  shell: '~/install-pihole.sh --unattended --disable-install-webserver'
  register: dbg_install_pihole
  tags: pihole

- name: Set PiHole to update every week
  replace:
    path: /etc/cron.d/pihole
    regexp: '^#(.*updatePihole.*)$'
    replace: '\1'
    backup: true
  tags: admin

- include: nginx.yml
- include: metrics.yml
