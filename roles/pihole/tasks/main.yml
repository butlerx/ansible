---
- name: Install NTP
  apt:
    package: ntp
    state: present
  tags: ntp

- name: Copy over the NTP configuration
  template:
    src: files/ntp.conf
    dest: /etc/ntp.conf
  notify:
    - restart ntp
    - force ntp update
  tags: ntp

- name: Make sure NTP is started up
  service:
    name: ntp
    state: started
    enabled: true
  tags: ntp

- name: 'Download Pi-Hole installer'
  get_url:
    url: https://install.pi-hole.net
    dest: ~/install-pihole.sh
    mode: 0740
  tags: pihole

- name: create pihole group
  become: true
  group:
    name: '{{ group_pihole }}'
    state: present

- name: create pihole user
  become: true
  user:
    name: '{{ user_pihole }}'
    group: '{{ group_pihole }}'
    groups: '{{ group_pihole }},www-data'
    comment: 'ad filtering DNS proxy'
    system: true
    shell: '/usr/sbin/nologin'

- name: Create pihole configuration directory
  become: true
  file:
    name: '{{ fspath_pihole_config }}'
    state: directory
    owner: '{{ user_pihole }}'
    group: '{{ group_pihole }}'
    mode: 0755
  tags: pihole

- name: Create pihole configuration
  become: true
  template:
    src: 'setupVars.conf.j2'
    dest: '{{ fspath_pihole_config }}/setupVars.conf'
    owner: root
    group: root
    mode: 0644
  tags: pihole

- name: Set static IP configuration
  become: true
  template:
    src: 'etc_network_interfaces.j2'
    dest: '/etc/network/interfaces'
    owner: root
    group: root
    mode: 0644
  tags: admin

- name: Set default DNS
  become: true
  template:
    src: 'files/etc_resolv.conf'
    dest: '/etc/resolv.conf'
    owner: root
    group: root
    mode: 0644
  tags: admin

- name: Install Pi-Hole
  shell: '~/install-pihole.sh --unattended'
  register: dbg_install_pihole
  tags: pihole

- name: Set PiHole to update every week
  become: true
  replace:
    path: /etc/cron.d/pihole
    regexp: '^#(.*updatePihole.*)$'
    replace: '\1'
    backup: true
  tags: admin

- include: nginx.yml
- include: metrics.yml
